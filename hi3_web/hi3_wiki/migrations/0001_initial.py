# Generated by Django 5.0.8 on 2024-08-26 03:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Battlesuit',
            fields=[
                ('battlesuit_id', models.IntegerField(db_column='BattleSuit_ID', primary_key=True, serialize=False)),
                ('battlesuit_name', models.CharField(blank=True, db_column='BattleSuit_name', max_length=255, null=True)),
                ('valkyrie_name', models.CharField(blank=True, db_column='Valkyrie_name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'battlesuit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DmgType',
            fields=[
                ('dmg_type_id', models.IntegerField(db_column='DMG_type_ID', primary_key=True, serialize=False)),
                ('dmg_type_name', models.CharField(blank=True, db_column='DMG_type_name', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'dmg_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Elements',
            fields=[
                ('element_id', models.IntegerField(db_column='Element_ID', primary_key=True, serialize=False)),
                ('elements_name', models.CharField(blank=True, db_column='Elements_name', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'elements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.IntegerField(db_column='Event_ID', primary_key=True, serialize=False)),
                ('event_name', models.CharField(blank=True, db_column='Event_Name', max_length=255, null=True)),
                ('start_date', models.DateField(blank=True, db_column='Start_Date', null=True)),
                ('end_date', models.DateField(blank=True, db_column='End_Date', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'event',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventbattlesuit',
            fields=[
                ('event_character_id', models.IntegerField(db_column='Event_Character_ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'eventbattlesuit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('position_id', models.IntegerField(db_column='Position_ID', primary_key=True, serialize=False)),
                ('position_name', models.CharField(blank=True, db_column='Position_Name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('skill_id', models.IntegerField(db_column='Skill_ID', primary_key=True, serialize=False)),
                ('skill_name', models.CharField(blank=True, db_column='Skill_name', max_length=255, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'skill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skilltype',
            fields=[
                ('skill_type_id', models.IntegerField(db_column='Skill_type_ID', primary_key=True, serialize=False)),
                ('skill_type_name', models.CharField(blank=True, db_column='Skill_type_name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'skilltype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Skin',
            fields=[
                ('skin_id', models.IntegerField(db_column='Skin_ID', primary_key=True, serialize=False)),
                ('skin_name', models.CharField(blank=True, db_column='Skin_Name', max_length=255, null=True)),
                ('filepath', models.CharField(blank=True, db_column='FilePath', max_length=255, null=True)),
            ],
            options={
                'db_table': 'skin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stigmata',
            fields=[
                ('stigmata_id', models.IntegerField(db_column='Stigmata_ID', primary_key=True, serialize=False)),
                ('stigmata_name', models.CharField(blank=True, db_column='Stigmata_Name', max_length=255, null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
            ],
            options={
                'db_table': 'stigmata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stigmatarank',
            fields=[
                ('rank_id', models.IntegerField(db_column='Rank_ID', primary_key=True, serialize=False)),
                ('rank_name', models.CharField(blank=True, db_column='Rank_Name', max_length=255, null=True)),
                ('hp', models.IntegerField(blank=True, db_column='HP', null=True)),
                ('atk', models.IntegerField(blank=True, db_column='ATK', null=True)),
                ('def_field', models.IntegerField(blank=True, db_column='DEF', null=True)),
                ('crit', models.IntegerField(blank=True, db_column='CRIT', null=True)),
                ('sp', models.IntegerField(blank=True, db_column='SP', null=True)),
            ],
            options={
                'db_table': 'stigmatarank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Stigmataset',
            fields=[
                ('set_id', models.IntegerField(db_column='Set_ID', primary_key=True, serialize=False)),
                ('set_name', models.CharField(blank=True, db_column='Set_Name', max_length=255, null=True)),
                ('set_eff_name', models.CharField(blank=True, db_column='Set_Eff_Name', max_length=255, null=True)),
                ('two_pieces_eff_name', models.CharField(blank=True, max_length=255, null=True)),
                ('two_pieces_eff', models.CharField(blank=True, max_length=255, null=True)),
                ('three_pieces_eff_name', models.CharField(blank=True, max_length=255, null=True)),
                ('two_piece_eff', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'stigmataset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subskill',
            fields=[
                ('subskill_id', models.IntegerField(db_column='SubSkill_ID', primary_key=True, serialize=False)),
                ('subskill_name', models.CharField(blank=True, db_column='SubSkill_Name', max_length=255, null=True)),
                ('effect', models.CharField(blank=True, db_column='Effect', max_length=255, null=True)),
            ],
            options={
                'db_table': 'subskill',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubSkillRankEffect',
            fields=[
                ('subskill_rank_effect_id', models.IntegerField(db_column='SubSkill_Rank_Effect_ID', primary_key=True, serialize=False)),
                ('damage', models.IntegerField(blank=True, db_column='Damage', null=True)),
            ],
            options={
                'db_table': 'sub_skill_rank_effect',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuitStats',
            fields=[
                ('rank_id', models.IntegerField(db_column='Rank_ID', primary_key=True, serialize=False)),
                ('rank', models.IntegerField(blank=True, db_column='Rank', null=True)),
                ('hp', models.SmallIntegerField(blank=True, null=True)),
                ('sp', models.IntegerField(blank=True, null=True)),
                ('atk', models.SmallIntegerField(blank=True, null=True)),
                ('def_field', models.SmallIntegerField(blank=True, db_column='def', null=True)),
                ('crit', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suit_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Traits',
            fields=[
                ('traits_id', models.IntegerField(db_column='Traits_ID', primary_key=True, serialize=False)),
                ('trait_name', models.CharField(blank=True, db_column='Trait_name', max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'traits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TraitValk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'trait_valk',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Valkyrie',
            fields=[
                ('valkyrie_id', models.SmallIntegerField(db_column='Valkyrie_ID', primary_key=True, serialize=False)),
                ('valkyrie_name', models.CharField(blank=True, db_column='Valkyrie_name', max_length=255, null=True)),
                ('birthday_day', models.IntegerField(db_column='Birthday_day')),
                ('birthday_month', models.CharField(db_column='Birthday_month', max_length=255)),
                ('cn_va', models.CharField(blank=True, db_column='CN_VA', max_length=255, null=True)),
                ('jp_va', models.CharField(blank=True, db_column='JP_VA', max_length=255, null=True)),
            ],
            options={
                'db_table': 'valkyrie',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weaponeffectcomponents',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('value_key', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'weaponeffectcomponents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Weaponeffecttemplates',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('effect_name', models.CharField(blank=True, max_length=255, null=True)),
                ('template', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'weaponeffecttemplates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponList',
            fields=[
                ('weapon_id', models.IntegerField(db_column='Weapon_ID', primary_key=True, serialize=False)),
                ('weapon_name', models.CharField(blank=True, db_column='Weapon_name', max_length=255, null=True)),
            ],
            options={
                'db_table': 'weapon_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponRanks',
            fields=[
                ('wrank_id', models.IntegerField(db_column='WRank_ID', primary_key=True, serialize=False)),
                ('rank', models.IntegerField(blank=True, null=True)),
                ('attack', models.IntegerField(blank=True, null=True)),
                ('crit', models.IntegerField(blank=True, null=True)),
                ('effect_description_1', models.CharField(blank=True, max_length=255, null=True)),
                ('effect_description_2', models.CharField(blank=True, max_length=255, null=True)),
                ('effect_description_3', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'weapon_ranks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeaponType',
            fields=[
                ('weapon_type_id', models.IntegerField(db_column='Weapon_type_ID', primary_key=True, serialize=False)),
                ('weapon_type_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'weapon_type',
                'managed': False,
            },
        ),
    ]
